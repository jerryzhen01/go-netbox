/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.9 (4.0)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
	"fmt"
)

// PatchedWritableModuleRequestStatus * `offline` - Offline * `active` - Active * `planned` - Planned * `staged` - Staged * `failed` - Failed * `decommissioning` - Decommissioning
type PatchedWritableModuleRequestStatus string

// List of PatchedWritableModuleRequest_status
const (
	PATCHEDWRITABLEMODULEREQUESTSTATUS_OFFLINE         PatchedWritableModuleRequestStatus = "offline"
	PATCHEDWRITABLEMODULEREQUESTSTATUS_ACTIVE          PatchedWritableModuleRequestStatus = "active"
	PATCHEDWRITABLEMODULEREQUESTSTATUS_PLANNED         PatchedWritableModuleRequestStatus = "planned"
	PATCHEDWRITABLEMODULEREQUESTSTATUS_STAGED          PatchedWritableModuleRequestStatus = "staged"
	PATCHEDWRITABLEMODULEREQUESTSTATUS_FAILED          PatchedWritableModuleRequestStatus = "failed"
	PATCHEDWRITABLEMODULEREQUESTSTATUS_DECOMMISSIONING PatchedWritableModuleRequestStatus = "decommissioning"
)

// All allowed values of PatchedWritableModuleRequestStatus enum
var AllowedPatchedWritableModuleRequestStatusEnumValues = []PatchedWritableModuleRequestStatus{
	"offline",
	"active",
	"planned",
	"staged",
	"failed",
	"decommissioning",
}

func (v *PatchedWritableModuleRequestStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PatchedWritableModuleRequestStatus(value)
	for _, existing := range AllowedPatchedWritableModuleRequestStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PatchedWritableModuleRequestStatus", value)
}

// NewPatchedWritableModuleRequestStatusFromValue returns a pointer to a valid PatchedWritableModuleRequestStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPatchedWritableModuleRequestStatusFromValue(v string) (*PatchedWritableModuleRequestStatus, error) {
	ev := PatchedWritableModuleRequestStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PatchedWritableModuleRequestStatus: valid values are %v", v, AllowedPatchedWritableModuleRequestStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PatchedWritableModuleRequestStatus) IsValid() bool {
	for _, existing := range AllowedPatchedWritableModuleRequestStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PatchedWritableModuleRequest_status value
func (v PatchedWritableModuleRequestStatus) Ptr() *PatchedWritableModuleRequestStatus {
	return &v
}

type NullablePatchedWritableModuleRequestStatus struct {
	value *PatchedWritableModuleRequestStatus
	isSet bool
}

func (v NullablePatchedWritableModuleRequestStatus) Get() *PatchedWritableModuleRequestStatus {
	return v.value
}

func (v *NullablePatchedWritableModuleRequestStatus) Set(val *PatchedWritableModuleRequestStatus) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedWritableModuleRequestStatus) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedWritableModuleRequestStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedWritableModuleRequestStatus(val *PatchedWritableModuleRequestStatus) *NullablePatchedWritableModuleRequestStatus {
	return &NullablePatchedWritableModuleRequestStatus{value: val, isSet: true}
}

func (v NullablePatchedWritableModuleRequestStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedWritableModuleRequestStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
